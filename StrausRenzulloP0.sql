--************************ Create Tables ************************
CREATE TABLE BANK_USER (
  USER_ID INTEGER PRIMARY KEY,
  USERNAME VARCHAR2(100) NOT NULL,
  PASSWORD VARCHAR2(100) NOT NULL,
  IS_ADMIN NUMBER(1, 0) DEFAULT 0 NOT NULL
);
/
CREATE TABLE BANK_ACCOUNT (
  ACCOUNT_ID INTEGER PRIMARY KEY,
  BALANCE NUMBER(25, 2) DEFAULT 0,
  OWNER_ID INTEGER NOT NULL
);
/
CREATE TABLE BANK_TRANSACTION (
  TRANSACTION_ID INTEGER PRIMARY KEY,
  TIMESTAMP DATE NOT NULL,
  ACCOUNT_ID INTEGER NOT NULL,
  AMOUNT NUMBER(25, 2)
);
-- /
-- CREATE TABLE BANKUSER_BANKACCOUNT (
--   USER_ID INTEGER NOT NULL,
--   ACCOUNT_ID INTEGER NOT NULL,
--   PRIMARY KEY (USER_ID, ACCOUNT_ID)
-- );
/
CREATE TABLE BANKUSER_TRANSACTION (
  USER_ID INTEGER NOT NULL,
  TRANSACTION_ID INTEGER NOT NULL,
  PRIMARY KEY (USER_ID, TRANSACTION_ID)
);
/
--************************ Create Constraints ************************
-- ALTER TABLE BANKUSER_BANKACCOUNT
--   ADD CONSTRAINT FK_BANKUSER_BANKACCOUNT
-- FOREIGN KEY (USER_ID) REFERENCES BANK_USER(USER_ID);
-- /
-- ALTER TABLE BANKUSER_BANKACCOUNT
--   ADD CONSTRAINT FK_BANKACCOUNT_BANKUSER
-- FOREIGN KEY (ACCOUNT_ID) REFERENCES BANK_ACCOUNT(ACCOUNT_ID);
-- /
ALTER TABLE BANK_ACCOUNT
  ADD CONSTRAINT FK_BANKUSER_ACCOUNT
FOREIGN KEY (OWNER_ID) REFERENCES BANK_USER(USER_ID);
/
ALTER TABLE BANKUSER_TRANSACTION
  ADD CONSTRAINT FK_BANKUSER_TRANSACTION
FOREIGN KEY (USER_ID) REFERENCES BANK_USER(USER_ID);
/
ALTER TABLE BANKUSER_TRANSACTION
  ADD CONSTRAINT FK_TRANSACTION_BANKUSER
FOREIGN KEY (TRANSACTION_ID) REFERENCES BANK_TRANSACTION(TRANSACTION_ID);
/
ALTER TABLE BANK_TRANSACTION
  ADD CONSTRAINT FK_TRANSACTION_ACCOUNT
FOREIGN KEY (ACCOUNT_ID) REFERENCES BANK_ACCOUNT(ACCOUNT_ID);

--************************ Create Sequences & Triggers ************************
CREATE SEQUENCE SQ_USER_ID_PK
  START WITH 1
  INCREMENT BY 1;
/
CREATE SEQUENCE SQ_TRANSACTION_ID_PK
  START WITH 1
  INCREMENT BY 1;
/
CREATE SEQUENCE SQ_ACCOUNT_ID_PK
  START WITH 1
  INCREMENT BY 1;
/

--Triggers
CREATE OR REPLACE TRIGGER TR_INSERT_USER
  BEFORE INSERT ON BANK_USER
  FOR EACH ROW
  BEGIN
    SELECT SQ_USER_ID_PK.nextval INTO :NEW.USER_ID FROM DUAL;
  end;
/
CREATE OR REPLACE TRIGGER TR_INSERT_ACCOUNT
  BEFORE INSERT ON BANK_ACCOUNT
  FOR EACH ROW
  BEGIN
    SELECT SQ_ACCOUNT_ID_PK.nextval INTO :NEW.ACCOUNT_ID FROM DUAL;
  end;
/
CREATE OR REPLACE TRIGGER TR_INSERT_TRANSACTION
  BEFORE INSERT ON BANK_TRANSACTION
  FOR EACH ROW
  BEGIN
    SELECT SQ_TRANSACTION_ID_PK.nextval INTO :NEW.TRANSACTION_ID FROM DUAL;
  end;
/
--************************ Create Test Data ************************
INSERT INTO BANK_USER(USERNAME, PASSWORD, IS_ADMIN)
VALUES ('GOD', 'IS_GREAT', 1);

